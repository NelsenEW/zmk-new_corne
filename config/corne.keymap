#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/key-labels/42.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2

#include "includes/settings.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"

#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT


/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rgb_hui: rgb_hui {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_HUI";
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        number_mt: number_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "NUMBER_MT";
            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none  &number_mt NUMBER_1 Q  &number_mt NUMBER_2 W  &number_mt NUMBER_3 F  &number_mt NUMBER_4 P  &number_mt N5 B                  &kp UP_ARROW     &number_mt NUMBER_6 J      &number_mt N7 L             &number_mt N8 U        &mt N9 Y           &number_mt N0 SINGLE_QUOTE  &none
&none  &hm_l LEFT_GUI A       &hm_l LEFT_ALT R       &hm_l LEFT_CONTROL S   &hm_shift_l LSHIFT T   &number_mt EQUAL G               &kp DOWN_ARROW   &number_mt SEMICOLON M     &hm_shift_r RSHIFT N        &hm_r RIGHT_CONTROL E  &hm_r RIGHT_ALT I  &hm_r LEFT_GUI O            &none
&none  &lt 3 Z                &number_mt GRAVE X     &kp C                  &mt MINUS D            &number_mt NON_US_BACKSLASH V    &kp LEFT_ARROW   &number_mt LEFT_BRACKET K  &number_mt RIGHT_BRACKET H  &kp COMMA              &kp PERIOD         &lt 3 SLASH                 &none
                              &none                  &lt 1 ESC              &lt 2 SPACE            &kp TAB                          &kp RIGHT_ARROW  &lt 4 ENTER                &lt 5 BACKSPACE             &lt 6 DEL
                                                                                                                                    &kp ENTER
            >;

            label = "colemak_dh";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Media {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF   &rgb_hui           &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &kp C_REWIND     &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT       &kp C_FAST_FORWARD
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &out OUT_TOG     &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4
                  &trans    &trans     &trans     &trans    &trans  &kp C_STOP       &kp C_PLAY_PAUSE  &kp K_MUTE
                                                            &trans
            >;

            label = "media";
        };

        Nav {
            bindings = <
&trans  &bootloader  &trans    &trans     &trans     &trans    &mmv MOVE_UP     &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO  &trans
&trans  &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &mmv MOVE_DOWN   &kp CAPS    &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT   &trans
&trans  &trans       &trans    &trans     &trans     &trans    &mmv MOVE_LEFT   &kp INS     &kp HOME     &kp PG_DN   &kp PG_UP  &kp END     &trans
                     &trans    &trans     &trans     &trans    &mmv MOVE_RIGHT  &trans      &trans       &trans
                                                               &mkp LCLK
            >;

            label = "nav";
        };

        Button {
            bindings = <
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_AGAIN    &mmv MOVE_UP     &kp K_AGAIN  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO  &trans
&trans  &kp LGUI    &kp LALT   &kp LCTRL   &kp LSHFT    &trans         &mmv MOVE_DOWN   &trans       &kp LSHFT    &kp LCTRL   &kp LALT   &kp LGUI    &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_AGAIN    &mmv MOVE_LEFT   &kp K_AGAIN  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO  &trans
                    &trans     &mkp MB3    &mkp MB1     &mkp MB2       &mmv MOVE_RIGHT  &mkp MB2     &mkp MB1     &mkp MB3
                                                                       &mkp LCLK
            >;

            label = "button";
        };

        symbol {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp LGUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp POUND              &kp PIPE           &trans  &trans  &trans     &trans     &trans    &trans    &trans
                        &trans           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &trans  &trans     &trans
                                                                                                         &trans
            >;
        };

        Number {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans  &trans     &trans     &trans    &trans    &trans
                   &trans  &kp DOT  &kp N0  &kp MINUS    &trans  &trans  &trans     &trans
                                                         &trans
            >;

            label = "number";
        };

        Function {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8      &kp F9     &kp PRINTSCREEN    &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &kp PAUSE_BREAK    &trans  &trans  &trans     &trans     &trans    &trans    &trans
                 &trans  &kp C_MENU  &kp SPACE  &kp TAB            &trans  &trans  &trans     &trans
                                                                   &trans
            >;

            label = "function";
        };

        layer_4 {
            label = "colemak_dh_bk";
            bindings = <
&trans  &kp Q       &kp W       &kp F        &kp P         &kp B      &kp UP_ARROW     &kp J      &kp L         &kp U         &kp Y         &kp SINGLE_QUOTE  &trans
&trans  &mt LGUI A  &mt LALT R  &mt LCTRL S  &mt LSHIFT T  &kp G      &kp DOWN_ARROW   &kp M      &mt LSHIFT N  &mt LSHIFT E  &mt LALT I    &mt LGUI O        &trans
&trans  &lt 4 Z     &mt RALT X  &kp C        &kp D         &kp V      &kp LEFT_ARROW   &kp K      &kp H         &kp COMMA     &mt RALT DOT  &lt 4 SLASH       &trans
                    &trans      &kp ESCAPE   &kp SPACE     &kp TAB    &kp RIGHT_ARROW  &kp ENTER  &kp BSPC      &kp DEL
                                                                      &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
